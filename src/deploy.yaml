apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: ENTER_NAMESPACE_HERE
  labels:
    app: web
spec:
  replicas: 2 # Set to desired value
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      # nodeSelector:
      #   letstream.io/client: sample
      imagePullSecrets:
      - name: registry-token
      containers:
      - name: web
        image: image:tag # Update Image Tag here
        ports:
        - containerPort: 8000
        envFrom:
        - secretRef:
            name: app-secrets
        command:
        - /bin/bash
        - -c
        - "cd /home/docker_deploy_user/app/app && gunicorn app.wsgi:application --name app --bind 0.0.0.0:8000 --workers 2 --threads 2 --log-level=debug"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: ENTER_NAMESPACE_HERE
  labels:
    app: celery-beat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-beat
  template:
    metadata:
      labels:
        app: celery-beat
    spec:
      # nodeSelector:
      #   letstream.io/client: sample
      imagePullSecrets:
      - name: registry-token
      containers:
      - name: celery-beat
        image: image:tag # Update Image Tag here
        envFrom:
        - secretRef:
            name: app-secrets
        command:
        - /bin/bash
        - -c
        - "cd /home/docker_deploy_user/app/app && celery -A app beat -l info -s /home/docker_deploy_user/pids/celerybeat-schedule"
---
# the block below can be repeated for each celery queue or as desired
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: ENTER_NAMESPACE_HERE
  labels:
    app: celery-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      # nodeSelector:
      #   letstream.io/client: sample
      imagePullSecrets:
      - name: registry-token
      containers:
      - name: celery-worker
        image: image:tag # Update Image Tag here
        envFrom:
        - secretRef:
            name: app-secrets
        command:
        - /bin/bash
        - -c
        - "cd /home/docker_deploy_user/app/app && celery -A app worker  -l info -Q celery --concurrency=1"
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: ENTER_NAMESPACE_HERE
spec:
  selector:
    app: web
  ports:
  - protocol: TCP
    port: 10081
    targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress
  namespace: ENTER_NAMESPACE_HERE
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/client-max-body-size: "500m"
spec:
  rules:
  - host: api.letstream.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web
            port:
              number: 10081
  tls:
  - hosts:
    - api.letstream.io
    secretName: ssl-certificate
